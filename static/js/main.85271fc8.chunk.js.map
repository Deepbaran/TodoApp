{"version":3,"sources":["context/TodoContext.js","context/action.types.js","context/reducer.js","components/TodoForm.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["TodoContext","createContext","ADD_TODO","REMOVE_TODO","state","action","type","payload","filter","todo","id","TodoForm","useState","todoString","setTodoString","dispatch","useContext","Form","onSubmit","e","preventDefault","alert","v4","FormGroup","InputGroup","Input","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","Todos","todos","ListGroup","className","map","index","ListGroupItem","onClick","App","useReducer","TodoReducer","Provider","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAEaA,G,YAAcC,2B,QCFdC,EAAW,WACXC,EAAc,cCCZ,WAACC,EAAOC,GACrB,OAAQA,EAAOC,MACb,KAAKJ,EACH,MAAM,GAAN,mBAAWE,GAAX,CAAkBC,EAAOE,UAC3B,KAAKJ,EACH,OAAOC,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAOE,WACjD,QACE,OAAOH,I,+DCqDEO,EAjDE,WACf,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACQC,EAAaC,qBAAWhB,GAAxBe,SAqBR,OACE,cAACE,EAAA,EAAD,CAAMC,SApBa,SAAAC,GAEnB,GADAA,EAAEC,iBACiB,KAAfP,EACF,OAAOQ,MAAM,uBAGf,IAAMZ,EAAO,CACXI,aACAH,GAAIY,eAGNP,EAAS,CACPT,KAAMJ,EACNK,QAASE,IAGXK,EAAc,KAId,SACE,cAACS,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,OACLhB,GAAG,OACHiB,YAAY,iBACZC,MAAOf,EACPgB,SAAU,SAAAV,GAAC,OAAIL,EAAcK,EAAEW,OAAOF,UAExC,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UADR,2B,wBClBGC,EAzBD,WACZ,MAA4BnB,qBAAWhB,GAA/BoC,EAAR,EAAQA,MAAOrB,EAAf,EAAeA,SAEf,OACE,cAACsB,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACGF,EAAMG,KAAI,SAAC9B,EAAM+B,GAAP,OACT,eAACC,EAAA,EAAD,WACGhC,EAAKI,WACN,sBACEyB,UAAU,cACVI,QAAS,WACP3B,EAAS,CACPT,KAAMH,EACNI,QAASE,EAAKC,MALpB,SASE,cAAC,IAAD,QAXgB8B,SCiBbG,EAnBH,WACV,MAA0BC,qBAAWC,EAAa,IAAlD,mBAAOT,EAAP,KAAcrB,EAAd,KAEA,OACE,cAACf,EAAY8C,SAAb,CACElB,MAAO,CACLQ,QACArB,YAHJ,SAME,eAACgC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,2DACA,cAAC,EAAD,IACA,cAAC,EAAD,UCXOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.85271fc8.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const TodoContext = createContext();\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';\r\n","import { ADD_TODO, REMOVE_TODO } from './action.types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n    case REMOVE_TODO:\r\n      return state.filter(todo => todo.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { v4 } from 'uuid';\r\nimport { TodoContext } from '../context/TodoContext';\r\nimport { ADD_TODO } from '../context/action.types';\r\n\r\nconst TodoForm = () => {\r\n  const [todoString, setTodoString] = useState('');\r\n  const { dispatch } = useContext(TodoContext);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (todoString === '') {\r\n      return alert('Please enter a todo');\r\n    }\r\n\r\n    const todo = {\r\n      todoString,\r\n      id: v4()\r\n    };\r\n\r\n    dispatch({\r\n      type: ADD_TODO,\r\n      payload: todo\r\n    });\r\n\r\n    setTodoString('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <InputGroup>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"todo\"\r\n            id=\"todo\"\r\n            placeholder=\"Your next Todo\"\r\n            value={todoString}\r\n            onChange={e => setTodoString(e.target.value)}\r\n          />\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <Button\r\n              color=\"warning\"\r\n              //TODO: onClick\r\n            >\r\n              Add\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, { useContext } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { FaCheckDouble } from 'react-icons/fa';\r\nimport { TodoContext } from '../context/TodoContext';\r\nimport { REMOVE_TODO } from '../context/action.types';\r\n\r\nconst Todos = () => {\r\n  const { todos, dispatch } = useContext(TodoContext);\r\n\r\n  return (\r\n    <ListGroup className=\"mt-5 mb-2 items\">\r\n      {todos.map((todo, index) => (\r\n        <ListGroupItem key={index}>\r\n          {todo.todoString}\r\n          <span\r\n            className=\"float-right\"\r\n            onClick={() => {\r\n              dispatch({\r\n                type: REMOVE_TODO,\r\n                payload: todo.id\r\n              });\r\n            }}\r\n          >\r\n            <FaCheckDouble />\r\n          </span>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useReducer } from 'react';\nimport { Container } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { TodoContext } from './context/TodoContext';\nimport TodoReducer from './context/reducer';\nimport TodoForm from './components/TodoForm';\nimport Todos from './components/Todos';\n\nconst App = () => {\n  const [todos, dispatch] = useReducer(TodoReducer, []);\n\n  return (\n    <TodoContext.Provider\n      value={{\n        todos,\n        dispatch\n      }}\n    >\n      <Container fluid>\n        <h1>Todo App with Context API</h1>\n        <Todos />\n        <TodoForm />\n      </Container>\n    </TodoContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}